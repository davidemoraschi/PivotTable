<local:ModelDisplayControl x:Class="Microsoft.Samples.WPF.CustomControls.DimensionsAndMeasuresPart"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Microsoft.Samples.WPF.CustomControls"
	AllowDrop="true">
	<local:ModelDisplayControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Resources.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<Style TargetType="{x:Type TreeView}">
				<Setter Property="Background"
						Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="BorderThickness"
						Value="1"/>
				<Setter Property="Padding"
						Value="1"/>
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
						Value="Auto"/>
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
						Value="Auto"/>
				<Setter Property="VerticalContentAlignment"
						Value="Center"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeView}">
							<Border BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									SnapsToDevicePixels="true">
								<ScrollViewer Background="{TemplateBinding Background}"
											  Focusable="false"
											  CanContentScroll="false"
											  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
											  Padding="{TemplateBinding Padding}"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
									<ItemsPresenter/>
								</ScrollViewer>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style TargetType="{x:Type TreeViewItem}">
				<Setter Property="Background"
						Value="Transparent"/>
				<Setter Property="HorizontalContentAlignment"
						Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment"
						Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Padding"
						Value="1,0,0,0"/>
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
  				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeViewItem}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition MinWidth="19"
													  Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<ToggleButton x:Name="Expander"
											  Style="{StaticResource TreeViewToggleButtonStyle}"
											  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
											  ClickMode="Press"/>
								<Border Name="Bd"
										Grid.Column="1"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}"
										SnapsToDevicePixels="true">
									<ContentPresenter x:Name="PART_Header"
													  ContentSource="Header"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Border>
								<ItemsPresenter x:Name="ItemsHost"
												Grid.Row="1"
												Grid.Column="1"
												Grid.ColumnSpan="2"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsExpanded"
										 Value="false">
									<Setter TargetName="ItemsHost"
											Property="Visibility"
											Value="Collapsed"/>
								</Trigger>
								<Trigger Property="HasItems"
										 Value="false">
									<Setter TargetName="Expander"
											Property="Visibility"
											Value="Hidden"/>
								</Trigger>
								<Trigger Property="IsSelected"
										 Value="true">
									<Setter TargetName="Bd"
											Property="Background"
											Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
									<Setter Property="Foreground"
											Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected"
												   Value="true"/>
										<Condition Property="IsSelectionActive"
												   Value="false"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd"
											Property="Background"
											Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
									<Setter Property="Foreground"
											Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
								</MultiTrigger>
								<Trigger Property="IsEnabled"
										 Value="false">
									<Setter Property="Foreground"
											Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<local:GroupHierarchiesAndMembersConverter x:Key="HierarchiesAndMembersGrouper"/>
			<local:HierarchiesAndMeasuresTemplateSelector x:Key="TreeViewItemsTemplateSelector"/>
			<local:HierarchiesAndMeasuresCollection x:Key="HierarchiesAndMeasuresCollection"/>

			<CollectionViewSource 
				x:Key="HierarchiesAndMeasuresView" 
				Source="{StaticResource HierarchiesAndMeasuresCollection}">
				<CollectionViewSource.GroupDescriptions>
					<PropertyGroupDescription Converter="{StaticResource HierarchiesAndMembersGrouper}"/>
				</CollectionViewSource.GroupDescriptions>
			</CollectionViewSource>

			<DataTemplate DataType="{x:Type local:IMeasuresMember}" x:Key="MeasuresMemberTemplate">
				<TextBlock Foreground="Green" Text="{Binding Path=Caption}"/>
			</DataTemplate>

			<HierarchicalDataTemplate
				x:Key="MeasuresGroupTemplate"
				DataType="{x:Type CollectionViewGroup}"
				ItemsSource="{Binding Path=Items}">
				<StackPanel Orientation="Horizontal">
					<TextBlock Margin="0, 0, 4, 0">âˆ‘</TextBlock>
					<TextBlock Text="{Binding Path=Name}" FontWeight="Bold"/>
				</StackPanel>
			</HierarchicalDataTemplate>

			<DataTemplate DataType="{x:Type local:IHierarchy}" x:Key="HierarchyTemplate">
				<TextBlock x:Name="CaptionTextBlock" Text="{Binding Path=Caption}"/>
			</DataTemplate>

			<HierarchicalDataTemplate 
				x:Key="HierarchiesGroupTemplate"
				DataType="{x:Type CollectionViewGroup}" 
				ItemsSource="{Binding Path=Items}">
				<StackPanel Orientation="Horizontal">
					<Border BorderBrush="Blue" BorderThickness="1, 1, 0, 0" Margin="0, 1, 4, 1" SnapsToDevicePixels="true">
						<Border BorderBrush="Black" BorderThickness="0, 0, 1, 1">
							<Canvas Width="10" Height="14">
								<Rectangle Canvas.Top="0" Canvas.Left="0" Width="10" Height="3">
									<Rectangle.Fill>
										<LinearGradientBrush StartPoint="0, 0.5" EndPoint="1, 0.5">
											<LinearGradientBrush.GradientStops>
												<GradientStop Color="LightBlue" Offset="0.1"/>
												<GradientStop Color="Blue" Offset="0.9"/>
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Line X1="0" Y1="3" X2="10" Y2="3" Stroke="Blue"/>
								<Line X1="2" Y1="6" X2="8" Y2="6" Stroke="Gray"/>
								<Line X1="2" Y1="8" X2="8" Y2="8" Stroke="Gray"/>
								<Line X1="2" Y1="10" X2="8" Y2="10" Stroke="Gray"/>
								<Line X1="2" Y1="12" X2="8" Y2="12" Stroke="Gray"/>
							</Canvas>
						</Border>
					</Border>
					<TextBlock Text="{Binding Path=Name}"/>
				</StackPanel>
			</HierarchicalDataTemplate>

			<HierarchicalDataTemplate
				x:Key="EmptyGroupTemplate"
				DataType="{x:Type CollectionViewGroup}"
				ItemsSource="{Binding Path=Items}">
				<TextBlock Text="?"/>
			</HierarchicalDataTemplate>
			
		</ResourceDictionary>
	</local:ModelDisplayControl.Resources>
	
	<DockPanel LastChildFill="True">
		<DockPanel DockPanel.Dock="Left" Name="ShowPartPanel" Background="{StaticResource HorizontalAxisElementsBrush}">
			<Button
				DockPanel.Dock="Top" 
				Click="ShowPartButtonClick"
				Padding="1"
				Margin="4"
				BorderBrush="Transparent"
				Background="Transparent">
				<Canvas Width="10" Height="8">
					<Polyline Stroke="Black" Points="0,0 5,4 0,8"/>
					<Polyline Stroke="Black" Points="5,0 10,4 5,8"/>
				</Canvas>
			</Button>
			<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4">
				<TextBlock.LayoutTransform>
					<RotateTransform Angle="-90"/>
				</TextBlock.LayoutTransform>
				Dimensions and measures
			</TextBlock>
		</DockPanel>
		
		<DockPanel 
			Name="SelectionPanel" 
			LastChildFill="True"
			Visibility="Collapsed">
			<DockPanel LastChildFill="True">
				<DockPanel DockPanel.Dock="Top" Background="{StaticResource VerticalAxisElementsBrush}">
					<Button 
						DockPanel.Dock="Right"
						Click="HidePartButtonClick"
						Padding="1"
						Margin="4" 
						BorderBrush="Transparent"
						Background="Transparent">
						<Canvas Width="10" Height="8">
							<Polyline Stroke="Black" Points="5,0 0,4 5,8"/>
							<Polyline Stroke="Black" Points="10,0 5,4 10,8"/>
						</Canvas>
					</Button>
					<TextBlock Margin="4" VerticalAlignment="Center" HorizontalAlignment="Center">
						Dimensions and measures
					</TextBlock>
				</DockPanel>
				<TreeView 
					Name="MembersAndHierarchiesTreeView"
					ItemsSource="{Binding Source={StaticResource HierarchiesAndMeasuresView}, Path=Groups}"
					ItemTemplateSelector="{StaticResource TreeViewItemsTemplateSelector}">
				</TreeView>
			</DockPanel>
		</DockPanel>	
	</DockPanel>
</local:ModelDisplayControl>
