<UserControl x:Class="Microsoft.Samples.WPF.CustomControls.MembersFilterTreeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Microsoft.Samples.WPF.CustomControls"
	LostFocus="ControlLostFocus">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="Resources.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<Style x:Key="OkButtonStyle" TargetType="{x:Type Button}">
				<Style.Triggers>
          <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
              <Condition Binding="{Binding SelectedChildrenCount}" Value="0"/>
              <Condition Binding="{Binding SelectionMode}" Value="ChildrenControlParent"/>
            </MultiDataTrigger.Conditions>
            <Setter Property="IsEnabled" Value="false"/>
          </MultiDataTrigger>
				</Style.Triggers>
			</Style>
			
			<Style x:Key="ExpandButtonStyle"
				   TargetType="{x:Type ToggleButton}">
				<Setter Property="Focusable" Value="false"/>
				<Setter Property="ClickMode" Value="Press"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border BorderThickness="1" BorderBrush="Black" 
									CornerRadius="1" Padding="2" SnapsToDevicePixels="true">
								<Border.Background>
									<LinearGradientBrush StartPoint="0,0"
															 EndPoint="1,1">
										<LinearGradientBrush.GradientStops>
											<GradientStop Color="White"
														  Offset=".4"/>
											<GradientStop Color="#FFC3BAAA"
														  Offset="1"/>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Border.Background>
								<Polygon x:Name="Polygon" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center"
									Points="0,0 8,0 4,6">
								</Polygon>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="true">
									<Setter Property="Points" TargetName="Polygon" 
										Value="0,6 8,6 4,0"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>

			</Style>

			<!-- Template for TreeView item -->
			<Style TargetType="{x:Type TreeViewItem}">
				<Setter Property="IsExpanded" Value="false"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeViewItem}">
							<Grid>

								<Grid.ColumnDefinitions>
									<ColumnDefinition MinWidth="10" Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
								</Grid.RowDefinitions>

								<StackPanel Orientation="Horizontal">
									<ToggleButton x:Name="Expander"
										Style="{StaticResource TreeViewToggleButtonStyle}"
										IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
										ClickMode="Press"/>
								</StackPanel>

								<Border Name="Border"
										Grid.Column="1"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}"
										SnapsToDevicePixels="True">

									<StackPanel Orientation="Horizontal">
										<CheckBox IsChecked="{Binding Path=IsSelected}"/>
										<ContentPresenter x:Name="PART_Header"
														  ContentSource="Header"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									</StackPanel>
								</Border>

								<ItemsPresenter x:Name="ItemsHost"
									Grid.Row="1"
									Grid.Column="1"
									Grid.ColumnSpan="2"
									Visibility="Collapsed"/>
							</Grid>

							<ControlTemplate.Triggers>

								<Trigger Property="IsExpanded"
									Value="true">
									<Setter TargetName="ItemsHost"
										Property="Visibility"
										Value="Visible"/>
								</Trigger>

								<DataTrigger Binding="{Binding Path=HasChildren}"
									Value="false">
									<Setter TargetName="Expander" 
											Property="Visibility"
											Value="Hidden"/>
								</DataTrigger>

								<Trigger Property="IsSelected"
										 Value="true">
									<Setter TargetName="Border"
											Property="Background"
											Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
									<Setter Property="Foreground"
											Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
								</Trigger>

								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="true"/>
										<Condition Property="IsSelectionActive" Value="false"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="Border"
											Property="Background"
											Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
									<Setter Property="Foreground"
											Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
								</MultiTrigger>
								<Trigger Property="IsEnabled"
										 Value="false">
									<Setter Property="Foreground"
											Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>

	<DockPanel LastChildFill="True">
		<DockPanel LastChildFill="True" DockPanel.Dock="Top">
			<ToggleButton
				DockPanel.Dock="Right"
				Click="DropDownButtonClick"
				Style="{StaticResource ExpandButtonStyle}"
				Margin="3"
				IsChecked="{Binding Path=IsOpen, Source=SelectionPopup}"/>
			<TextBlock Padding="4,1,4,1" Name="CaptionTextBlock"/>
		</DockPanel>		
		<Popup
			Name="SelectionPopup" 
			PlacementTarget="{Binding ElementName=DropDownButton}"
			Placement="Bottom"
			PopupAnimation="Fade"
			AllowsTransparency="True"
			Width="200"
			Height="300"
			Focusable="True"
			MouseMove="OnPopupMouseMove"
			>
			<Border BorderThickness="1" BorderBrush="Black" Background="White">
				<DockPanel LastChildFill="True">
					
					<Grid DockPanel.Dock="Bottom">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
						</Grid.RowDefinitions>

						<Button Name="OkButton" Grid.Column="0" Margin="4, 4" Click="OkButtonClick" 
								Style="{StaticResource OkButtonStyle}">OK</Button>
						<Button Name="CancelButton" Grid.Column="1" Margin="4, 4" Click="CancelButtonClick">Cancel</Button>
					</Grid>

					<TreeView Name="MembersTreeView" 
							  ScrollViewer.VerticalScrollBarVisibility="Auto"
						ItemsSource="{Binding}">
						<TreeView.ItemTemplate>
							<HierarchicalDataTemplate
								DataType="{x:Type local:MembersTreeNode}"
								ItemsSource="{Binding Path=Children}">
								<TextBlock Text="{Binding Path=Member.Caption}"/>
							</HierarchicalDataTemplate>
						</TreeView.ItemTemplate>
					</TreeView>
					
				</DockPanel>
			</Border>
		</Popup>
		
	</DockPanel>
</UserControl>
